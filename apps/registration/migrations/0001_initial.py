# Generated by Django 4.0.4 on 2022-04-24 12:47

import apps.registration.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('prefix', models.CharField(choices=[('PROF', 'Prof.'), ('DR', 'Dr.'), ('MR', 'Mr.'), ('MRS', 'Mrs.'), ('MS', 'Ms.'), ('REV', 'REV')], max_length=4, verbose_name='Prefix')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('sex', models.CharField(choices=[('0', 'Not Known'), ('1', 'Male'), ('2', 'Female'), ('9', 'Not Applicable')], default='0', max_length=1, null=True, verbose_name='Sex')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Phone')),
                ('registration_type', models.CharField(choices=[('ORGANIZER', 'Organizer'), ('PRESENTER', 'Presenter'), ('EXHIBITOR', 'Exhibitor'), ('PARTICIPANT', 'Participant'), ('STUDENT', 'Student')], max_length=11, verbose_name='Registration Type')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
                'db_table': 'Person',
                'ordering': ['first_name', 'last_name', 'created'],
                'abstract': False,
            },
            managers=[
                ('objects', apps.registration.managers.PersonManager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=512, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'Country',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Exhibitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('booths', models.IntegerField(verbose_name='Number of Booths')),
            ],
            options={
                'verbose_name': 'Exhibitor',
                'verbose_name_plural': 'Exhibitors',
                'db_table': 'Exhibitor',
                'ordering': ['institution', 'booths'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=1024, verbose_name='Name')),
                ('address', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Address')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Institution',
                'verbose_name_plural': 'Institutions',
                'db_table': 'Institution',
                'ordering': ['name', 'country'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExhibitorPersonnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('contact', models.BooleanField(default=False, verbose_name='Contact Person?')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.exhibitor', verbose_name='Institution')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Participant')),
            ],
            options={
                'db_table': 'ExhibitorPersonnel',
                'ordering': ['participant'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='exhibitor',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.institution'),
        ),
        migrations.AddField(
            model_name='exhibitor',
            name='personnel',
            field=models.ManyToManyField(related_name='personnel', through='registration.ExhibitorPersonnel', to=settings.AUTH_USER_MODEL, verbose_name='Participant(s)'),
        ),
        migrations.CreateModel(
            name='AwardNominee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('award', models.CharField(choices=[('Maria Kamm Best Female Scientist Award', 'Maria Kamm Best Female Scientist Award'), ('Mwelecele Malecela Memorial Award', 'Mwelecele Malecela Memorial Award'), ('The National Best Health Scientist Award', 'The National Best Health Scientist Award'), ('The National Health Innovation Award', 'The National Health Innovation Award'), ('The National Lifetime Award in Health Research', 'The National Lifetime Award in Health Research'), ('The NIMR Best Scientist Award', 'The NIMR Best Scientist Award')], max_length=50, verbose_name='Award')),
                ('votes', models.IntegerField(default=0, verbose_name='Votes')),
                ('nominee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nominees', to=settings.AUTH_USER_MODEL, verbose_name='Nominee')),
                ('voters', models.ManyToManyField(related_name='voters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'AwardNominee',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='person',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.institution', verbose_name='Institution'),
        ),
        migrations.AddField(
            model_name='person',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
